name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
      - "issue46"
  # schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    # - cron: "0 0 * * *"

concurrency:
  group: "${{ github.ref }}-${{ github.head_ref }}"
  cancel-in-progress: true


jobs:
  test:
    name: "Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
        env_file: [env, ]
        include:
          - name: minimum_requirements
            os: ubuntu-latest
            python-version: 3.6
            env_file: min

    steps:
    - uses: actions/checkout@v2

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    # More info on options: https://github.com/conda-incubator/setup-miniconda
    # An environment for the minimum versions 
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_${{ matrix.env_file }}.yaml
        channels: conda-forge, defaults
        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true
    
    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list

    - name: Run tests
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        pytest -v --cov=membrane_curvature --cov-report=xml --color=yes membrane_curvature/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
        fail_ci_if_error: True

